plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'org.project'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	// Spring Boot Data JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Spring Boot JDBC
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// Spring Boot web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Spring Boot Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Springdoc OpenAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	// Log4j SLF4J Implementation
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// mysql Database
	implementation 'mysql:mysql-connector-java:8.0.32'

	// Spring Boot Test Starter
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:mysql'
	testImplementation 'org.awaitility:awaitility'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
